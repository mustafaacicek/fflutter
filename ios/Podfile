platform :ios, '12.0'

# CocoaPods analytics sends network stats synchronously affecting flutter build latency.
ENV['COCOAPODS_DISABLE_STATS'] = 'true'

# Firebase modülerlik sorununu çözmek için
ENV['SWIFT_VERSION'] = '5.0'

project 'Runner', {
  'Debug' => :debug,
  'Profile' => :release,
  'Release' => :release,
}

def flutter_root
  generated_xcode_build_settings_path = File.expand_path(File.join('..', 'Flutter', 'Generated.xcconfig'), __FILE__)
  unless File.exist?(generated_xcode_build_settings_path)
    raise "#{generated_xcode_build_settings_path} must exist. If you're running pod install manually, make sure flutter pub get is executed first"
  end

  File.foreach(generated_xcode_build_settings_path) do |line|
    matches = line.match(/FLUTTER_ROOT\=(.*)/) 
    return matches[1].strip if matches
  end
  raise "FLUTTER_ROOT not found in #{generated_xcode_build_settings_path}. Try deleting Generated.xcconfig, then run flutter pub get"
end

require File.expand_path(File.join('packages', 'flutter_tools', 'bin', 'podhelper'), flutter_root)

flutter_ios_podfile_setup

# Firebase sürüm uyumluluğu için
$FirebaseSDKVersion = '10.25.0'

# Firebase modülerlik sorununu çözmek için
# Not: Tek bir post_install hook'u kullanılmalı

target 'Runner' do
  use_frameworks! :linkage => :static
  use_modular_headers!

  flutter_install_all_ios_pods File.dirname(File.realpath(__FILE__))
  
  # Firebase için özel sürüm belirtme
  pod 'Firebase', $FirebaseSDKVersion
  pod 'Firebase/Core', $FirebaseSDKVersion
  pod 'Firebase/Analytics', $FirebaseSDKVersion
  pod 'Firebase/Messaging', $FirebaseSDKVersion
  
  # Firebase modular header sorunu için
  pod 'FirebaseCore', :modular_headers => true
  pod 'FirebaseMessaging', :modular_headers => true
  pod 'GoogleUtilities', :modular_headers => true
end

post_install do |installer|
  installer.pods_project.targets.each do |target|
    flutter_additional_ios_build_settings(target)
    
    # Firebase modülerlik sorunu için eklenen ayarlar
    target.build_configurations.each do |config|
      # Minimum iOS sürümü ayarı
      config.build_settings['IPHONEOS_DEPLOYMENT_TARGET'] = '12.0'
      
      # Genel modülerlik ayarları
      config.build_settings['CLANG_ALLOW_NON_MODULAR_INCLUDES_IN_FRAMEWORK_MODULES'] = 'YES'
      config.build_settings['CLANG_WARN_QUOTED_INCLUDE_IN_FRAMEWORK_HEADER'] = 'NO'
      config.build_settings['EXCLUDED_ARCHS[sdk=iphonesimulator*]'] = 'i386'
      
      # Swift versiyon ayarı
      config.build_settings['SWIFT_VERSION'] = '5.0'
      
      # Firebase modülleri için özel ayarlar
      if target.name.start_with?('Firebase') || target.name.include?('Firebase') || target.name.include?('firebase')
        config.build_settings['BUILD_LIBRARY_FOR_DISTRIBUTION'] = 'YES'
        config.build_settings['APPLICATION_EXTENSION_API_ONLY'] = 'NO'
        config.build_settings['DEFINES_MODULE'] = 'YES'
        config.build_settings['ONLY_ACTIVE_ARCH'] = 'NO'
        config.build_settings['CLANG_ALLOW_NON_MODULAR_INCLUDES_IN_FRAMEWORK_MODULES'] = 'YES'
        config.build_settings['CLANG_WARN_QUOTED_INCLUDE_IN_FRAMEWORK_HEADER'] = 'NO'
        config.build_settings['GCC_PREPROCESSOR_DEFINITIONS'] ||= ["$(inherited)", 'COCOAPODS=1', 'PB_FIELD_32BIT=1', 'PB_NO_PACKED_STRUCTS=1', 'PB_ENABLE_MALLOC=1']
      end
      
      # firebase_messaging için özel ayarlar
      if target.name.include?('firebase_messaging')
        config.build_settings['CLANG_ALLOW_NON_MODULAR_INCLUDES_IN_FRAMEWORK_MODULES'] = 'YES'
        config.build_settings['CLANG_WARN_QUOTED_INCLUDE_IN_FRAMEWORK_HEADER'] = 'NO'
        config.build_settings['HEADER_SEARCH_PATHS'] ||= []
        config.build_settings['HEADER_SEARCH_PATHS'] << "${PODS_ROOT}/Firebase/CoreOnly/Sources"
        config.build_settings['HEADER_SEARCH_PATHS'] << "${PODS_ROOT}/Headers/Public"
      end
    end
  end
  
  # Firebase.h dosyasının import edilme şeklini düzenle
  installer.pods_project.files.each do |file|
    if file.path.end_with?('FLTFirebaseMessagingPlugin.h')
      file_path = file.real_path
      content = File.read(file_path)
      new_content = content.gsub(/#import <Firebase\/Firebase.h>/, '#import "Firebase.h"')
      if new_content != content
        File.write(file_path, new_content)
        puts "Modified import in #{file_path}"
      end
    end
  end
end
